// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech-to-text.proto

package ai.vernacular.speech;

public interface RecognitionConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:speech_to_text.RecognitionConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.speech_to_text.RecognitionConfig.AudioEncoding encoding = 1;</code>
   * @return The enum numeric value on the wire for encoding.
   */
  int getEncodingValue();
  /**
   * <code>.speech_to_text.RecognitionConfig.AudioEncoding encoding = 1;</code>
   * @return The encoding.
   */
  ai.vernacular.speech.RecognitionConfig.AudioEncoding getEncoding();

  /**
   * <pre>
   * Valid values are: 8000-48000.
   * </pre>
   *
   * <code>int32 sample_rate_hertz = 2;</code>
   * @return The sampleRateHertz.
   */
  int getSampleRateHertz();

  /**
   * <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The languageCode.
   */
  java.lang.String getLanguageCode();
  /**
   * <code>string language_code = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for languageCode.
   */
  com.google.protobuf.ByteString
      getLanguageCodeBytes();

  /**
   * <code>int32 max_alternatives = 4;</code>
   * @return The maxAlternatives.
   */
  int getMaxAlternatives();

  /**
   * <code>repeated .speech_to_text.SpeechContext speech_contexts = 5;</code>
   */
  java.util.List<ai.vernacular.speech.SpeechContext> 
      getSpeechContextsList();
  /**
   * <code>repeated .speech_to_text.SpeechContext speech_contexts = 5;</code>
   */
  ai.vernacular.speech.SpeechContext getSpeechContexts(int index);
  /**
   * <code>repeated .speech_to_text.SpeechContext speech_contexts = 5;</code>
   */
  int getSpeechContextsCount();
  /**
   * <code>repeated .speech_to_text.SpeechContext speech_contexts = 5;</code>
   */
  java.util.List<? extends ai.vernacular.speech.SpeechContextOrBuilder> 
      getSpeechContextsOrBuilderList();
  /**
   * <code>repeated .speech_to_text.SpeechContext speech_contexts = 5;</code>
   */
  ai.vernacular.speech.SpeechContextOrBuilder getSpeechContextsOrBuilder(
      int index);

  /**
   * <code>int32 audio_channel_count = 6;</code>
   * @return The audioChannelCount.
   */
  int getAudioChannelCount();

  /**
   * <code>bool enable_separate_recognition_per_channel = 7;</code>
   * @return The enableSeparateRecognitionPerChannel.
   */
  boolean getEnableSeparateRecognitionPerChannel();

  /**
   * <code>bool enable_word_time_offsets = 8;</code>
   * @return The enableWordTimeOffsets.
   */
  boolean getEnableWordTimeOffsets();

  /**
   * <code>bool enable_automatic_punctuation = 11;</code>
   * @return The enableAutomaticPunctuation.
   */
  boolean getEnableAutomaticPunctuation();

  /**
   * <code>.speech_to_text.SpeakerDiarizationConfig diarization_config = 16;</code>
   * @return Whether the diarizationConfig field is set.
   */
  boolean hasDiarizationConfig();
  /**
   * <code>.speech_to_text.SpeakerDiarizationConfig diarization_config = 16;</code>
   * @return The diarizationConfig.
   */
  ai.vernacular.speech.SpeakerDiarizationConfig getDiarizationConfig();
  /**
   * <code>.speech_to_text.SpeakerDiarizationConfig diarization_config = 16;</code>
   */
  ai.vernacular.speech.SpeakerDiarizationConfigOrBuilder getDiarizationConfigOrBuilder();
}
