// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speech-to-text.proto

package ai.vernacular.speech;

public interface StreamingRecognizeResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:speech_to_text.StreamingRecognizeResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>.google.rpc.Status error = 1;</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   * If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>.google.rpc.Status error = 1;</code>
   * @return The error.
   */
  com.google.rpc.Status getError();
  /**
   * <pre>
   * If set, returns a [google.rpc.Status][google.rpc.Status] message that
   * specifies the error for the operation.
   * </pre>
   *
   * <code>.google.rpc.Status error = 1;</code>
   */
  com.google.rpc.StatusOrBuilder getErrorOrBuilder();

  /**
   * <pre>
   * This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .speech_to_text.StreamingRecognitionResult results = 2;</code>
   */
  java.util.List<ai.vernacular.speech.StreamingRecognitionResult> 
      getResultsList();
  /**
   * <pre>
   * This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .speech_to_text.StreamingRecognitionResult results = 2;</code>
   */
  ai.vernacular.speech.StreamingRecognitionResult getResults(int index);
  /**
   * <pre>
   * This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .speech_to_text.StreamingRecognitionResult results = 2;</code>
   */
  int getResultsCount();
  /**
   * <pre>
   * This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .speech_to_text.StreamingRecognitionResult results = 2;</code>
   */
  java.util.List<? extends ai.vernacular.speech.StreamingRecognitionResultOrBuilder> 
      getResultsOrBuilderList();
  /**
   * <pre>
   * This repeated list contains zero or more results that
   * correspond to consecutive portions of the audio currently being processed.
   * It contains zero or one `is_final=true` result (the newly settled portion),
   * followed by zero or more `is_final=false` results (the interim results).
   * </pre>
   *
   * <code>repeated .speech_to_text.StreamingRecognitionResult results = 2;</code>
   */
  ai.vernacular.speech.StreamingRecognitionResultOrBuilder getResultsOrBuilder(
      int index);
}
